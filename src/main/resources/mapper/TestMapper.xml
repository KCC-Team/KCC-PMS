<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.pms.domain.test.mapper.TestMapper">
    <resultMap id="codeOptions" type="com.kcc.pms.domain.common.model.dto.CommonCodeOptions">
        <id column="COMMON_CD_NO" property="common_cd_no"/>
        <collection property="codes" resultMap="codeDetails"/>
    </resultMap>

    <resultMap id="codeDetails" type="com.kcc.pms.domain.common.model.vo.CommonCodeVO">
        <result column="CD_DTL_NO" property="cd_dtl_no"/>
        <result column="CD_DTL_NM" property="cd_dtl_nm"/>
        <result column="ORDER_NO" property="order_no"/>
    </resultMap>

    <resultMap id="testDto" type="testDto">
        <result property="testType" column="testType" />
        <result property="testId" column="testId" />
        <result property="workTitle" column="workTitle" />
        <result property="testStartDate" column="testStartDate"/>
        <result property="testEndDate" column="testEndDate"/>
        <result property="detailCount" column="detailCount" />
        <result property="defectCount" column="defectCount" />
        <result property="testStatus" column="testStatus" />
        <association property="testItem" column="testItem">
            <id property="testNumber" column="testNumber" />
            <result property="testTitle" column="testTitle" />
        </association>
    </resultMap>

    <resultMap id="defect" type="TestDefectDto">
        <id property="defectNumber" column="defectNumber"/>
        <result property="defectId" column="defectId"/>
        <result property="defectStatusCode" column="defectStatusCode"/>
    </resultMap>

    <resultMap id="TestPageResponseDto" type="TestPageResponseDto">
        <result property="totalPage" column="totalPage"/>
        <result property="totalElements" column="totalElements"/>
        <collection property="testList" resultMap="testDto"/>
    </resultMap>

    <resultMap id="testReq" type="testRequestDto">
        <result property="testId" column="testId" />
        <result property="testStageContent" column="testStageContent" />
    </resultMap>

    <resultMap id="TestDetail" type="TestDetailRequestDto">
        <id property="testDetailNumber" column="testDetailNumber"/>
        <result property="testDetailId" column="testDetailId"/>
        <result property="preCondition" column="preCondition"/>
        <result property="testDetailContent" column="testDetailContent"/>
        <result property="testProcedure" column="testProcedure"/>
        <result property="workContent" column="workContent"/>
        <result property="testData" column="testData"/>
        <result property="estimatedResult" column="estimatedResult"/>
        <result property="writtenDate" column="writtenDate"/>
        <result property="writerNo" column="writerNo"/>
        <result property="writerName" column="writerName"/>
        <result property="testDate" column="testDate"/>
        <result property="result" column="result"/>
        <result property="parentDetailNo" column="parentDetailNo"/>
        <result property="testNo" column="testNo"/>
        <collection property="featNumbers" ofType="java.lang.Long">
            <result column="ft_feat_no" />
        </collection>
        <collection property="defectNos" ofType="TestDefectDto" resultMap="defect"/>
    </resultMap>

    <resultMap id="TestMaster" type="TestMasterRequestDto">
        <id property="testNumber" column="testNumber"/>
        <result property="testId" column="testId"/>
        <result property="testTitle" column="testTitle"/>
        <result property="testContent" column="testContent"/>
        <result property="testStatus" column="testStatus"/>
        <result property="testType" column="testType"/>
        <result property="workSystemNo" column="workSystemNo"/>
        <result property="testStartDate" column="testStartDate"/>
        <result property="testEndDate" column="testEndDate"/>
        <collection property="testCaseList" ofType="TestDetailRequestDto" resultMap="TestDetail"/>
    </resultMap>

    <select id="getCommonCodeOptions" resultMap="codeOptions">
        SELECT common_cd_no, cd_dtl_no, cd_dtl_nm, order_no
        FROM codedetail
        WHERE common_cd_no IN( 'PMS012','PMS013')
        ORDER BY common_cd_no, order_no
    </select>

    <select id="findAllByOptions" parameterType="map" resultMap="TestPageResponseDto">
        SELECT *
        FROM (
        SELECT
        t.test_no AS testNumber,
        t.test_id AS testId,
        TRIM(cd_type.cd_dtl_nm) AS testType,
        t.test_title AS testTitle,
        sys_work.sys_ttl AS workTitle,
        TO_CHAR(t.test_st_dt, 'YYYY-MM-DD') AS testStartDate,
        TO_CHAR(t.test_end_dt, 'YYYY-MM-DD') AS testEndDate,
        COUNT(DISTINCT td.test_dtl_no) AS detailCount,
        COUNT(d.df_no) AS defectCount,
        TRIM(cd_stat.cd_dtl_nm) AS testStatus,
        COUNT(*) OVER() AS totalElements,
        ROW_NUMBER() OVER (ORDER BY t.reg_dt DESC) AS rn
        FROM testmaster t
        LEFT JOIN testdetail td ON t.test_no = td.test_no
        LEFT JOIN codedetail cd_type ON t.type_cd = cd_type.cd_dtl_no
        LEFT JOIN codedetail cd_stat ON t.stat_cd = cd_stat.cd_dtl_no
        LEFT JOIN defect d ON td.test_dtl_no = d.test_dtl_no
        LEFT JOIN system sys_work ON sys_work.sys_no = t.sys_work_no
        WHERE t.prj_no = #{projectNumber} AND t.use_yn = 'Y'
        <if test="workNumber != 0">
            AND (t.sys_work_no = #{workNumber, jdbcType=INTEGER} OR sys_work.par_sys_no = #{workNumber, jdbcType=INTEGER})
        </if>
        <if test="testType != 'all'">
            AND t.type_cd = #{testType, jdbcType=CHAR}
        </if>
        <if test="search != null">
            AND (t.test_title LIKE '%' || #{search} || '%' OR t.test_id LIKE '%' || #{search} || '%')
        </if>
        <if test="status != 'all'">
            AND t.stat_cd = #{status, jdbcType=CHAR}
        </if>
        GROUP BY
        t.test_no, t.test_id, cd_type.cd_dtl_nm, t.test_title, sys_work.sys_ttl, t.test_st_dt, t.test_end_dt, cd_stat.cd_dtl_nm, t.reg_dt
        ) sub
        WHERE rn BETWEEN (#{page} - 1) * #{limit} + 1 AND #{page} * #{limit}
    </select>

    <insert id="saveTest">
        <selectKey keyProperty="testReq.testNumber" resultType="long" order="BEFORE">
            SELECT SEQ_TESTMASTER.nextval FROM DUAL
        </selectKey>

        INSERT INTO testmaster
        (test_no, test_id, test_title, test_cont, stat_cd, type_cd,
         test_st_dt, test_end_dt, prj_no, sys_work_no, reg_id, reg_dt, use_yn)
        VALUES
            (#{testReq.testNumber}, #{testReq.testId}, #{testReq.testTitle},
             #{testReq.testContent}, #{testReq.testStatus},
             #{testReq.testType}, TO_DATE(#{testReq.testStartDate, jdbcType=DATE}, 'YYYY-MM-DD'),
            <choose>
                <when test="testReq.testEndDate != null">
                    TO_DATE(#{testReq.testEndDate}, 'YYYY-MM-DD'),
                </when>
                <otherwise>
                    NULL,
                </otherwise>
            </choose>
             #{projectNo}, #{testReq.workSystemNo, jdbcType=NUMERIC},
             #{memberNo},
             sysdate, 'Y')
    </insert>

    <insert id="saveUnitTestDetails">
        <selectKey keyProperty="testDetail.testDetailNumber" resultType="long" order="BEFORE">
            SELECT SEQ_TESTDETAIL.nextval FROM DUAL
        </selectKey>

        INSERT INTO testdetail (
            test_dtl_no,
            test_dtl_id,
            pre_cond,
            test_detail_cont,
            progress_cont,
            test_data,
            estimated_rlt,
            mem_no,
            test_no,
            created_dt,
            test_st_dt,
            test_result_cd
        )
        VALUES (
            #{testDetail.testDetailNumber},
            #{testDetail.testDetailId},
            #{testDetail.preCondition},
            #{testDetail.testDetailContent},
            #{testDetail.testProcedure},
            #{testDetail.testProcedure},
            #{testDetail.estimatedResult},
            #{testDetail.writerNo, jdbcType=NUMERIC},
            #{testNo}, TO_DATE(sysdate, 'YYYY-MM-DD'),
            TO_DATE(#{testDetail.testDate, jdbcType=DATE}, 'YYYY-MM-DD'),
            <choose>
                <when test="testDetail.result == '결과 선택'">
                    null
                </when>
                <otherwise>
                    #{testDetail.result, jdbcType=CHAR}
                </otherwise>
            </choose>
        )
    </insert>

    <insert id="saveIntegrationTestDetails" parameterType="map">
        <selectKey keyProperty="testDetail.testDetailNumber" resultType="long" order="BEFORE">
            SELECT SEQ_TESTDETAIL.nextval FROM DUAL
        </selectKey>

        INSERT INTO testdetail
        (
            test_dtl_no,
            test_dtl_id,
            test_detail_cont,
            pre_cond,
            test_no,
            created_dt
        )
        VALUES (
            #{testDetail.testDetailNumber},
            #{testDetail.testDetailId},
            #{testDetail.testDetailContent},
            #{testDetail.preCondition},
            #{testNo}, sysdate
        )
    </insert>

    <update id="updateStatus">
        update testdetail
        <choose>
            <when test='status == "PMS00703"'>
                set test_result_cd = 'PMS01401'
            </when>
            <when test='status == "PMS00702" or status == "PMS00701"'>
                set test_result_cd = 'PMS01402'
            </when>
            <otherwise>
                set test_result_cd = null
            </otherwise>
        </choose>
        where test_no = #{testNo}
    </update>

    <update id="updateIntegrationTestDetails" parameterType="map">
        UPDATE testdetail
        <set>
            <if test="testDetail.testDetailContent != null">
                test_detail_cont = #{testDetail.testDetailContent},
            </if>
            <if test="testDetail.preCondition != null">
                pre_cond = #{testDetail.preCondition},
            </if>
        </set>
        WHERE test_dtl_no = #{testDetail.testDetailNumber}
    </update>

    <insert id="saveTestDetails">
        <selectKey keyProperty="testDetail.testDetailNumber" resultType="long" order="BEFORE">
            SELECT SEQ_TESTDETAIL.nextval FROM DUAL
        </selectKey>

        INSERT INTO testdetail (
            test_dtl_no,
            test_data,
            estimated_rlt,
            wrk_proc_cont,
            mem_no,
            test_no,
            created_dt,
            test_st_dt,
            test_result_cd,
            par_test_dtl_no
        )
        VALUES (
        #{testDetail.testDetailNumber},
        #{testDetail.testData},
        #{testDetail.estimatedResult},
        #{testDetail.workContent},
        #{testDetail.writerNo, jdbcType=NUMERIC},
        #{testNo}, sysdate,
        TO_DATE(#{testDetail.testDate, jdbcType=DATE}, 'YYYY-MM-DD')),
        <choose>
            <when test="testDetail.result == '결과 선택'">
                null,
            </when>
            <otherwise>
                #{testDetail.result, jdbcType=CHAR},
            </otherwise>
        </choose>
        #{parDetailNo}
        )
    </insert>

    <update id="updateTestDetails">
        UPDATE testdetail
        <set>
            test_data = #{testDetail.testData},
            estimated_rlt = #{testDetail.estimatedResult},
            wrk_proc_cont = #{testDetail.workContent},
            mem_no = #{testDetail.writerNo, jdbcType=NUMERIC},
            test_st_dt = #{testDetail.testDate, jdbcType=DATE}, 'YYYY-MM-DD',
            test_result_cd =
            <choose>
                <when test="testDetail.result == '결과 선택'">
                    null
                </when>
                <otherwise>
                    #{testDetail.result, jdbcType=CHAR}
                </otherwise>
            </choose>,
        </set>
        WHERE test_dtl_no = #{testDetail.testDetailNumber}
    </update>

    <insert id="saveFeatureTest">
        INSERT INTO featuretest (
            feat_no,
            test_dtl_no
        )
        VALUES (
            #{featureNo},
            #{testDetailNo}
        )
    </insert>

    <delete id="deleteFeatureTests">
        DELETE FROM featuretest WHERE test_dtl_no = #{testDetailNo}
    </delete>

    <select id="getTest" resultMap="TestMaster" parameterType="long">
        SELECT
            t.test_no AS testNumber,
            t.test_id AS testId,
            t.test_title AS testTitle,
            t.test_cont AS testContent,
            t.stat_cd AS testStatus,
            t.type_cd AS testType,
            t.sys_work_no AS workSystemNo,
            TO_CHAR(t.test_st_dt, 'YYYY-MM-DD') AS testStartDate,
            TO_CHAR(t.test_end_dt, 'YYYY-MM-DD') AS testEndDate,
            td.test_dtl_no AS testDetailNumber,
            td.test_dtl_id AS testDetailId,
            td.pre_cond AS preCondition,
            td.test_detail_cont AS testDetailContent,
            td.progress_cont AS testProcedure,
            td.wrk_proc_cont AS workContent,
            td.test_data AS testData,
            td.estimated_rlt AS estimatedResult,
            TO_CHAR(td.created_dt, 'YYYY-MM-DD') AS writtenDate,
            m.mem_no AS writerNo,
            m.mem_nm AS writerName,
            TO_CHAR(td.test_st_dt, 'YYYY-MM-DD') AS testDate,
            td.test_result_cd AS result,
            ft.feat_no AS ft_feat_no,
            d.df_no AS defectNumber,
            d.df_id AS defectId,
            d.stat_cd AS defectStatusCode
        FROM testmaster t
        LEFT JOIN testdetail td ON t.test_no = td.test_no
        LEFT JOIN member m ON td.mem_no = m.mem_no
        LEFT JOIN featuretest ft ON td.test_dtl_no = ft.test_dtl_no
        LEFT JOIN defect d ON td.test_dtl_no = d.test_dtl_no
        WHERE t.test_no = #{testNo} and t.use_yn = 'Y'
        ORDER BY td.test_dtl_no
    </select>

    <select id="getIntegrationTest" resultMap="TestMaster" parameterType="long">
        SELECT
            td.*,
            tm.test_no as testNumber,
            tm.test_id as testId,
            tm.test_title as testTitle,
            tm.test_cont as testContent,
            tm.stat_cd as testStatus,
            tm.type_cd as testType,
            tm.sys_work_no as workSystemNo,
            TO_CHAR(tm.test_st_dt, 'YYYY-MM-DD') as testStartDate,
            TO_CHAR(tm.test_end_dt, 'YYYY-MM-DD') as testEndDate
        FROM (
                 SELECT
                     td.test_dtl_no as testDetailNumber,
                     td.test_dtl_id as testDetailId,
                     td.pre_cond as preCondition,
                     td.test_detail_cont as testDetailContent,
                     td.progress_cont as testProcedure,
                     td.wrk_proc_cont as workContent,
                     td.test_data as testData,
                     td.estimated_rlt as estimatedResult,
                     td.created_dt as writtenDate,
                     m.mem_no as writerNo,
                     m.mem_nm as writerName,
                     td.TEST_RESULT_CD as result,
                     td.test_st_dt as testDate,
                     td.par_test_dtl_no as parentDetailNo,
                     td.test_no as testNo,
                     ft.feat_no AS ft_feat_no,
                     d.df_no as defectNumber,
                     d.df_id as defectId,
                     d.stat_cd as defectStatusCode
                 FROM testdetail td
                          LEFT JOIN featuretest ft ON td.test_dtl_no = ft.test_dtl_no
                          LEFT JOIN defect d ON d.test_dtl_no = td.test_dtl_no
                        LEFT JOIN member m ON td.mem_no = m.mem_no
                 START WITH td.test_no = #{testNo} AND td.par_test_dtl_no IS NULL
                 CONNECT BY PRIOR td.test_dtl_no = td.par_test_dtl_no
             ) td
                 LEFT JOIN testmaster tm ON td.testNo = tm.test_no
    </select>

    <update id="updateTest">
        update testmaster t
        set
            t.test_id = #{testId},
            t.test_title = #{testTitle},
            t.test_cont = #{testContent},
            t.stat_cd = #{testStatus, jdbcType=CHAR},
            t.type_cd = #{testType, jdbcType=CHAR},
            t.sys_work_no = #{workSystemNo, jdbcType=NUMERIC},
            t.test_st_dt = TO_DATE(#{testStartDate, jdbcType=DATE}, 'YYYY-MM-DD'),
            t.test_end_dt = TO_DATE(#{testEndDate, jdbcType=DATE}, 'YYYY-MM-DD')
        where t.test_no = #{testNumber, jdbcType=NUMERIC}
    </update>

    <update id="updateTestDetail">
        update testdetail td
        set td.pre_cond = #{preCondition, jdbcType=VARCHAR},
            td.test_detail_cont = #{testDetailContent, jdbcType=VARCHAR},
            td.progress_cont = #{testProcedure, jdbcType=VARCHAR},
            td.wrk_proc_cont = #{workContent, jdbcType=VARCHAR},
            td.test_data = #{testData, jdbcType=VARCHAR},
            td.estimated_rlt = #{estimatedResult, jdbcType=VARCHAR},
            td.mem_no = #{writerNo, jdbcType=NUMERIC},
            td.test_st_dt = SUBSTR(#{testDate}, 1, 10),
        <choose>
            <when test="result == '결과 선택'">
                td.test_result_cd = null
            </when>
            <otherwise>
                td.test_result_cd = #{result, jdbcType=CHAR}
            </otherwise>
        </choose>
        where td.test_dtl_no = #{testDetailNumber, jdbcType=NUMERIC}
    </update>

    <insert id="saveTestStage" parameterType="map">
        INSERT INTO testdetail (
            test_dtl_no,
            test_dtl_id,
            test_detail_cont,
            par_test_dtl_no,
            created_dt,
            test_no
        )
        VALUES (
                   seq_testdetail.nextval,
                   #{test.testId, jdbcType=VARCHAR},
                   #{test.testStageContent, jdbcType=VARCHAR},
                   #{testDetailNo, jdbcType=NUMERIC},
                   sysdate,
                   #{testNo, jdbcType=NUMERIC}
               )
    </insert>

    <select id="getTestType">
        select type_cd from testmaster where test_no = #{testNumber}
    </select>

    <select id="getFeatures" resultType="FeatureSimpleResponseDto">
        SELECT feat_no AS featureNo, feat_title AS featureName
        FROM feature
        WHERE prj_no = #{projectNumber}
    </select>

    <update id="updateTestStage">
        update TESTDETAIL
        set
            test_dtl_id = #{testId},
            test_detail_cont = #{testStageContent}
        where test_dtl_no = #{testDetailNumber}
    </update>

    <delete id="deleteTestStage">
        delete from testdetail where par_test_dtl_no = #{testDetailNumber}
    </delete>
    
    <update id="deleteTest" parameterType="long">
        update testmaster t set t.use_yn = 'N' where test_no = #{testNumber, jdbcType=INTEGER}
    </update>
</mapper>