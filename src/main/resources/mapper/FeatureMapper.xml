<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.pms.domain.feature.mapper.FeatureMapper">

    <resultMap id="codeOptions" type="com.kcc.pms.domain.common.model.dto.CommonCodeOptions">
        <id column="COMMON_CD_NO" property="common_cd_no"/>
        <collection property="codes" resultMap="codeDetails"/>
    </resultMap>

    <resultMap id="codeDetails" type="com.kcc.pms.domain.common.model.vo.CommonCodeVO">
        <result column="CD_DTL_NO" property="cd_dtl_no"/>
        <result column="CD_DTL_NM" property="cd_dtl_nm"/>
        <result column="ORDER_NO" property="order_no"/>
    </resultMap>

    <select id="getFeatureCommonCode" resultMap="codeOptions">
        SELECT common_cd_no, cd_dtl_no, cd_dtl_nm, order_no
        FROM codedetail
        WHERE common_cd_no IN( 'PMS006','PMS009','PMS010','PMS011')
        ORDER BY common_cd_no, order_no
    </select>


    <insert id="createFeature" parameterType="FeatureCreateRequestDto">
        <selectKey keyProperty="featNo" resultType="long" order="BEFORE">
            SELECT seq_feature.NEXTVAL FROM dual
        </selectKey>

        INSERT INTO Feature (
        feat_no, feat_id, feat_title, feat_cont, pre_st_dt, pre_end_dt, st_dt, end_dt,
        stat_cd, pri_cd, prg, diff_cd, class_cd, use_yn, sys_no, mem_no, tm_no, prj_no
        ) VALUES (
        #{featNo}, #{featId}, #{featTitle}, #{featDescription},
        <if test="preStartDate != null and preStartDate != ''">#{preStartDate},</if>
        <if test="preStartDate == null or preStartDate == ''">NULL,</if>
        <if test="preEndDate != null and preEndDate != ''">#{preEndDate},</if>
        <if test="preEndDate == null or preEndDate == ''">NULL,</if>
        <if test="startDate != null and startDate != ''">#{startDate},</if>
        <if test="startDate == null or startDate == ''">NULL,</if>
        <if test="endDate != null and endDate != ''">#{endDate},</if>
        <if test="endDate == null or endDate == ''">NULL,</if>
        #{statusCode}, #{priorCode}, #{progress},
        <if test="diffCode != null and diffCode != ''">#{diffCode},</if>
        <if test="diffCode == null or diffCode == ''">NULL,</if>
        <if test="featClassCode != null and featClassCode != ''">#{featClassCode},</if>
        <if test="featClassCode == null or featClassCode == ''">NULL,</if>
        'Y',
        <if test="systemNo != null">#{systemNo},</if>
        <if test="systemNo == null">NULL,</if>
        <if test="memberNo != null">#{memberNo},</if>
        <if test="memberNo == null">NULL,</if>
        <if test="teamNo != null">#{teamNo},</if>
        <if test="teamNo == null">NULL,</if>
        #{prjNo}
        )
    </insert>

    <select id="getProgressSummary" resultType="com.kcc.pms.domain.feature.model.dto.FeatureProgressResponseDto">
        SELECT
        ROUND(SUM(f.prg) / COUNT(f.feat_no), 2) AS progress,
        COUNT(f.feat_no) AS total,
        COUNT(CASE WHEN f.prg &lt; 100 AND SYSDATE &lt; f.pre_end_dt THEN 1 END) AS presentCount,
        COUNT(CASE WHEN f.prg = 100 THEN 1 END) AS complete,
        COUNT(CASE WHEN f.prg &lt; 100 AND SYSDATE &gt; f.pre_end_dt THEN 1 END) AS delay
        FROM
        System s
        JOIN Feature f ON f.sys_no = s.sys_no
        WHERE
        s.prj_no = #{prjNo}

        <if test="systemNo != null">
            AND (s.sys_no = #{systemNo} OR s.sys_no IN (
            SELECT sys_no FROM System
            START WITH sys_no = #{systemNo}
            CONNECT BY PRIOR sys_no = par_sys_no
            ))
        </if>

        <if test="featClassCd != null and featClassCd != ''">
            AND f.class_cd = #{featClassCd}
        </if>
    </select>



    <select id="getSystemFeatureList" resultType="com.kcc.pms.domain.feature.model.dto.FeatureSummaryResponseDto">
        SELECT
        f.feat_no AS featureNo,
        f.feat_id AS featureId,
        f.feat_title AS featureTitle,
        m.mem_nm AS memberName,
        f.prg AS progress,
        s.sys_ttl AS system,
        st.cd_dtl_nm AS status,
        CASE
        WHEN f.pre_end_dt >= SYSDATE THEN 'D-' || TRUNC(f.pre_end_dt - SYSDATE)
        ELSE 'D+' || ABS(TRUNC(SYSDATE - f.pre_end_dt))
        END AS remainingDays
        FROM
        feature f
        JOIN
        system s ON f.sys_no = s.sys_no
        JOIN
        member m ON f.mem_no = m.mem_no
        JOIN
        codedetail st ON f.stat_cd = st.cd_dtl_no
        WHERE
        s.prj_no = #{prjNo}

        <!-- systemNo가 없으면 전체 데이터를 가져옴 있으면 해당 시스템 및 하위 시스템으로 필터링 -->
        <if test="systemNo != null">
            AND (
            s.sys_no = #{systemNo}
            OR s.sys_no IN (
            SELECT sys_no
            FROM system
            START WITH sys_no = #{systemNo}
            CONNECT BY PRIOR sys_no = par_sys_no
            )
            )
        </if>

        <!-- featClassCd가 존재하는 경우 해당 기능 코드로 필터링 -->
        <if test="featClassCd != null">
            AND f.class_cd = #{featClassCd}
        </if>
        ORDER BY st.order_no
    </select>

    <select id="getProjectProgressSummary" resultType="com.kcc.pms.domain.feature.model.dto.FeatureProgressResponseDto">
        <![CDATA[
        SELECT
        COUNT(feat_no) AS total,
        COUNT(CASE WHEN prg = 100 THEN 1 END) AS complete,
        COUNT(CASE WHEN prg < 100 AND SYSDATE < pre_end_dt THEN 1 END) AS presentCount,
        COUNT(CASE WHEN prg < 100 AND SYSDATE > pre_end_dt THEN 1 END) AS delay,
        ROUND(AVG(prg), 2) AS progress
        FROM
        FEATURE
        WHERE
        prj_no = #{prjNo}
        ]]>
    </select>

    <select id="getProjectFeatureList" resultType="com.kcc.pms.domain.feature.model.dto.FeatureSummaryResponseDto">
        SELECT
            f.feat_no AS featureNo,
            f.feat_id AS featureId,
            f.feat_title AS featureTitle,
            m.mem_nm AS memberName,
            f.prg AS progress,
            s.sys_ttl AS system,
            st.cd_dtl_nm AS status,
            CASE
                WHEN f.pre_end_dt >= SYSDATE THEN 'D-' || TRUNC(f.pre_end_dt - SYSDATE)
                ELSE 'D+' || ABS(TRUNC(SYSDATE - f.pre_end_dt))
                END AS remainingDays
        FROM
            feature f,
            system s,
            member m,
            codedetail st
        WHERE
            f.sys_no = s.sys_no
          AND f.mem_no = m.mem_no
          AND f.stat_cd = st.cd_dtl_no
          AND s.prj_no = #{prjNo}
        ORDER BY st.order_no
    </select>
</mapper>